.navbar.navbar-inverse.navbar-fixed-top
  .navbar-inner
    .container-fluid
      -# Brand Link
      = link_to 'SSIG Lab', root_path, :class=>'brand'

      %div

        - if user_signed_in? # User Signed In:
          -# Logout Btn
          = link_to 'Logout', logout_path, :method=>:delete, :class=>'btn pull-right'
          -# Spacer
          %p.navbar-text.pull-right
            &nbsp;&nbsp;&nbsp;&nbsp;
          -# Messages Btn
          - if can? :read, UserMessage
            %a.btn.btn-inverse.pull-right{title:pluralize(@unread_msgs, 'Message'), "data-placement"=>"bottom", rel: "tooltip", href: user_messages_path, :class=>@unread_msgs > 0 ? 'unread_msgs_color': ''}
              %i.fa.fa-envelope
          -# Signed in as text
          %p.navbar-text.pull-right
            Signed in as
            = link_to current_user[:username], user_path(current_user[:id]), :class=>'navbar-link'
            &nbsp;&nbsp;&nbsp;&nbsp;

        - else # User Not Signed In:
          -# User Sign In Form
          = form_for User.new, :as=>:user, :url=>login_path, :html=>{:class=>'navbar-form pull-right'} do |f|
            = f.text_field :username, :class=>'span2', :placeholder=>'Username'
            = f.password_field :password, :class=>'span2', :placeholder=>'Password'
            = f.submit 'Sign in', :class=>'btn'
            
        %ul.nav
          - @nav_links.each_pair do |name,link|
            - next if not link[:condition]
            %li{class: ((link[:active]?'active':'') +' '+ (link[:sublinks].any? ? 'dropdown' : ''))}
              %a{class: (link[:sublinks].any? ? 'dropdown-toggle' : ''), href: link[:url]}
                = name
                - if link[:sublinks].any?
                  %b.caret
              - if link[:sublinks].any?
                %ul.dropdown-menu
                  - link[:sublinks].each_pair do |sub_name, sub_link|
                    %li{:class=>(sub_link[:active]?'active':'')}
                      = link_to sub_name, sub_link[:url]
