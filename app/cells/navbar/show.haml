%nav.navbar.navbar-inverse.navbar-fixed-top
  .container-fluid
    .navbar-header
      %button.navbar-toggle.collapsed(type="button" data-toggle="collapse" data-target="#navbar" aria-expanded="false" aria-controls="navbar")
        %span.sr-only Toggle navigation
        %span.icon-bar
        %span.icon-bar
        %span.icon-bar
      -# Brand Link
      = link_to 'SSIG Lab', root_path, class: 'navbar-brand'

    %div.navbar-collapse.collapse#navbar
      - if user_signed_in? # User Signed In:
        -# Logout Btn
        %p.navbar-right.navbar-form
          = link_to 'Logout', logout_path, :method=>:delete, :class=>'btn btn-default'
        -# Messages Btn
        - if can? :read, UserMessage
          %p.navbar-text.navbar-right.navbar-form
            %a.btn.btn-default.btn-xs.btn-inverse{title: pluralize(@unread_msgs, 'Message'), data: { placement: 'bottom'}, rel: 'tooltip', href: user_messages_path, class: @unread_msgs > 0 ? 'unread_msgs_color': ''}
              %i.fa.fa-envelope
        -# Signed in as text
        %p.navbar-text.navbar-right
          Signed in as
          = link_to current_user[:username], user_path(current_user[:id]), :class=>'navbar-link'
          &nbsp;&nbsp;&nbsp;&nbsp;

      - else # User Not Signed In:
        .visible-lg-inline
          -# User Sign In Form
          = form_for User.new, :as=>:user, :url=>login_path, :html=>{:class=>'navbar-form navbar-right'} do |f|
            .form-group
              = f.text_field :username, :class=>'form-control', :placeholder=>'Username'
            .form-group
              = f.password_field :password, :class=>'form-control', :placeholder=>'Password'
            = f.submit 'Sign in', :class=>'btn btn-default'

      %ul.nav.navbar-nav
        - @nav_links.each_pair do |name,link|
          - next if not link[:condition]
          %li{class: ((link[:active] ? 'active' : '') +' '+ (link[:sublinks].any? ? 'dropdown' : '') +' '+ (link[:class] || ''))}
            %a{class: (link[:sublinks].any? ? 'dropdown-toggle' : ''), href: link[:url]}
              = name
              - if link[:sublinks].any?
                %b.caret
            - if link[:sublinks].any?
              %ul.dropdown-menu
                - link[:sublinks].each_pair do |sub_name, sub_link|
                  %li{:class=>(sub_link[:active]?'active':'')}
                    = link_to sub_name, sub_link[:url]
